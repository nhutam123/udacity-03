---

- name: "configuration play." 
  hosts: all
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

  pre_tasks:
  
  - name: install python
    raw: yum -y install python
  - name: "Update apt-get repo and cache"
    apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    args:
      executable: /bin/bash


  # pre_tasks:
    # - name: "Wait 600 seconds for target connection to become reachable/usable"
    #   wait_for_connection:
    #     delay: 0
    #     timeout: 600
    # - name: "install dependencies."
    #   become: true
    #   apt:
    #     name: ["nodejs", "npm"]
    #     state: latest
    #     update_cache: yes
    # - name: "install pm2"
    #   become: true
    #   npm:
    #     name: pm2
    #     global: yes
    #     production: yes
    #     state: present

  # Get the environment variables from CircleCI and add to the EC2 instance
  environment: 
      ENVIRONMENT: production
      TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
      TYPEORM_MIGRATIONS_DIR: "./migrations"
      TYPEORM_MIGRATIONS: "./migrations/*.js"
      TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
      TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
      TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
      TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
      TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
      TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
    # Add more env vars here

  roles:
    - configure-server